diff helps to find out the differences between 2 versions of a file quickly, thereby making it easier to trace bugs in the code. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

This makes it easy to track changes in the code and idenftify common 
mistakes so that these are not repeated in the future.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros
-Automatic commits can create a lot of redundant versions, manual commits let one decide the best time to commit

Cons
-Might err in judgement
-Might forget to commit



Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

In Google Docs, changes to files are unlikely to be interrelated. While in Git, there might be changes that alter multiple files at once. So, tracking these files together makes more sense.



How can you use the commands git log and git diff to view the history of files?

git log shows a list of changes made to the repository while git diff helps to analyse the differences between commits



How might using version control make you more confident to make changes that could break something?

Knowing that I can switch between different versions without any hassle would give me confidence that I have something to fall back on even if I break something.



Now that you have your workspace set up, what do you want to try using Git for?

To manage development of a simple calculator application.





commands learned
-git diff
-git log
-git clone
-git checkout
